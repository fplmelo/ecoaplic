---
title: "6-Frequency Tests"
subtitle: " "
author: "Felipe Melo"
institute: "Nottingham Trent University - UK"
from: markdown+emoji
format:
  revealjs:
    theme: [default, custom.scss]
    incremental: false
    chalkboard: true
    logo: img/ntu_logo.png
    footer: "Research Methods & Data Analysis"
    slide-number: true
    transition: slide
    background-transition: fade
    #auto-stretch: true
    title-block-banner: true

---

```{r}
library(tidyverse)
library(palmerpenguins)
#install.packages("gmodels")
library(gmodels)
library(kableExtra)
library(gtable)

```


## You should know today:

- Know when to use frequency tests
- Work with tables and graphs
- Understand the logic of independence between variables


## Types of variables (review)

::::{.columns}
:::{.column .fragment}
**Categorical**

![](https://static-assets.codecademy.com/Courses/Hypothesis-Testing/Intro_to_variable_types_3.png)

:::

:::{.column .fragment}
**Numerical**

![](https://static-assets.codecademy.com/Courses/Hypothesis-Testing/Intro_to_variable_types_4.png)

:::
::::

## Back to the toolbox

![](img/toolkit.png){fig-align="center"}


## Let's imagine Ladybirds

:::{.panel-tabset}

## Ladybirds

![](img/ladybirds.png){width="40%" fig-align="center"}

## Code

```{r}
#| label: table
#| include: true
#| echo: true
ladybirds <- tribble(
  ~Habitat, ~Site, ~Colour, ~Number,
  "Rural", "R1", "Black", 10,
  "Rural", "R2", "Black", 3,
  "Rural", "R3", "Black", 4,
  "Rural", "R4", "Black", 7,
  "Rural", "R5", "Black", 6,
  "Rural", "R1", "Red", 15,
  "Rural", "R2", "Red", 18,
  "Rural", "R3", "Red", 9,
  "Rural", "R4", "Red", 12,
  "Rural", "R5", "Red", 16,
  "Industrial", "U1", "Black", 32,
  "Industrial", "U2", "Black", 25,
  "Industrial", "U3", "Black", 25,
  "Industrial", "U4", "Black", 17,
  "Industrial", "U5", "Black", 16,
  "Industrial", "U1", "Red", 17,
  "Industrial", "U2", "Red", 23,
  "Industrial", "U3", "Red", 21,
  "Industrial", "U4", "Red", 9,
  "Industrial", "U5",  
 "Red", 15
)


```

## Data

```{r}

ladybirds
```

## Table 1

```{r}
#| include: true
#| echo: true
#| output-location: column
ladybirds%>% 
  group_by(Habitat, Colour) %>% 
  summarize(count = sum(Number)) |> 
  kable()


```

## Table 2

```{r}
#| include: true
#| echo: true
#| output-location: column

ladybirds%>% 
  group_by(Habitat, Colour) %>% 
  summarize(count = sum(Number)) %>% 
  spread(Colour, count, fill = 0) |> 
  kable()
```
:::

## How habitat type influences morphotype occurrence of ladybirds?{.center}

## Is there an association between habitat and LB morphotype?{.center}


## Tweaking tables

:::{.panel-tabset}

## Code
```{r}
#| include: true
#| echo: true
#| output-location: column
ladybirds |> 
  group_by(Habitat, Colour) |> 
  summarize(count = sum(Number)) |> 
  mutate(prop=count/sum(count)) |>   # our new proportion variable
  kable()
```

## Code 2

```{r}
#| include: true
#| echo: true
#| output-location: column
ladybirds |> 
  group_by(Habitat, Colour) |> 
  summarize(count = sum(Number)) |> 
  mutate(prop=count/sum(count)) |>   # our new proportion variable
  select(Habitat, Colour, prop) |> 
  spread(Habitat, prop) |> 
  kable()
```

## Code 3

```{r}
#| include: true
#| echo: true
#| output-location: default
library(janitor)
ladybirds |> 
  group_by(Habitat, Colour) %>% 
  summarize(count = sum(Number)) %>% 
  spread(Colour, count, fill = 0)|> 
  adorn_totals(c("row", "col")) |> 
  kable()
  


```
:::

## Proportions

:::{.panel-tabset}

## Totals
```{r}
#| include: true
#| echo: true
#| output-location: default
ladybirds |> 
  group_by(Habitat, Colour) %>% 
  summarize(count = sum(Number)) %>% 
  spread(Colour, count, fill = 0) |> 
  column_to_rownames("Habitat") |> 
  proportions() |> 
  kable()
```

## Rows
```{r}
#| include: true
#| echo: true
#| output-location: default
ladybirds |> 
  group_by(Habitat, Colour) %>% 
  summarise(count = sum(Number)) %>% 
  spread(Colour, count, fill = 0) |> 
  column_to_rownames("Habitat") |> 
  as.matrix()->t
  proportions(t,1) |> 
    kable()
```

## Columns
```{r}
#| include: true
#| echo: true
#| output-location: default
ladybirds |> 
  group_by(Habitat, Colour) %>% 
  summarise(count = sum(Number)) %>% 
  spread(Colour, count, fill = 0) |> 
  column_to_rownames("Habitat") |> 
  as.matrix()->t
  proportions(t,2) |> 
    kable()
```
:::

## All important at once

```{r}
#| include: true
#| echo: true
#| output-location: default
CrossTable(t)

```

## Proportions can be tricky

- 2/3 of LB are found in Industrial areas 
- It is rare fo find a black LB in rural areas
- Red LB don't show any habitat preference
- Black LB prefer Industrual areas

:::{.fragment}
- **How many more infor can we extract from this table?**
:::

## Drug abuse and Marihuana

| Marihuana | abuse| no abuse|
|:----------|-----:|---:|
|Yes |   35|  205|
|No      |    8|  48|

:::{.fragment}
- Marihuana leads to other drugs?

:::

## Placebo effect

| Cure | treatment| placebo| no treatment|
|:----------|-----:|---:|---:|
|Yes |   43|  31| 27|
|No      |    12|  24| 28|

:::{.fragment}
- Most people is cured anyway
- Treatment improves positive resolution

:::

## The frequency tests{.center}

## Chi-square test

$$Chisquare  = (Obs-Esp)Â²/Esp$$

```{r}
#| include: true
#| echo: true
#| output-location: default
CrossTable(t, expected = TRUE, prop.r = FALSE, 
           prop.t = FALSE, prop.c = FALSE, prop.chisq = TRUE, chisq=FALSE)
```

## Testing rows
:::{.panel-tabset}

## Black LB
```{r}
#| include: true
#| echo: true
#| output-location: default

t[,1] # first line, Blacks
chisq.test(t[,1])$expected
chisq.test(t[,1])
```

## Red LB

```{r}
#| include: true
#| echo: true
#| output-location: default
t[,2] # second line, Reds
chisq.test(t[,2])$expected
chisq.test(t[,2])
```

:::


## Testing columns

:::{.panel-tabset}

## Industrial
```{r}
#| include: true
#| echo: true
#| output-location: default

t[1,]
chisq.test(t[1,])$expected
chisq.test(t[1,])

```

## Rural

```{r}
#| include: true
#| echo: true
#| output-location: default

t[2,]
chisq.test(t[2,])$expected
chisq.test(t[2,])

```
:::

## Distributions
:::{.panel-tabset}
## Data

```{r}
#| include: true
#| echo: true
#| output-location: column  
pop<-tribble(
  ~age, ~country, ~pop,
       "0-10","UK", 50,
       "0-10","BRA", 120,
       "11-20","UK", 70,
       "11-20","BRA", 140,
       "21-30","UK", 110,
       "21-30","BRA", 150,
       "31-40","UK", 150,
       "31-40","BRA", 180,
       "40-50","UK", 180,
       "40-50","BRA", 180,
       "50-60","UK", 150,
       "50-60","BRA", 90,
       "60-70","UK", 130,
       "60-70","BRA", 50)

```

## Graph
```{r}
#| include: true
#| echo: true
#| output-location: column
pop |> 
  ggplot(aes(x=age, y= pop, color=country, fill=country))+
  geom_col(position="dodge")+
  theme(axis.text=element_text(size = 18),
        axis.title = element_text(size=18))
```

## Chi square test

```{r}
#| include: true
#| echo: true
#| output-location: column
pop |> 
  group_by(country, age) %>% 
  #summarise(count = sum(Number)) %>% 
  spread(country, pop, fill = 0) |> 
  column_to_rownames("age") |> 
  as.matrix() -> t2
  chisq.test(t2)

  chisq.test(t2)$expected

```

:::

## Loglinear models

- Based on contingency tables with multiple levels
- Can model data
- Based on odds ratio

:::{.fragment}

### BEAUTIFUL
:::

## Multiple contingency tables

```{r}
#| include: true
#| echo: true
#| output-location: default  

library(MASS)
pop |> 
  rename(male=pop) |> 
  mutate(female=ifelse(country=="UK", male^1.01, male^1.03)) |> 
  pivot_longer(cols = male:female, names_to = "sex")->dat.mod

model1<-glm(value~age*country*sex, data=dat.mod, family="poisson")

summary(model1)


```

## Frequency tests

- Chi-square test
- Z-test
- G test
- Binomial tests
- Loglinear models*

## Key points
- Can you identify when you need a frequency test?
- Are you able to extract the info from the tables and graphics?
- Can you interpret correctly the results?

## Types of frequency test

:::{.panel-tabset}
## Observed vs Expected
```{r}
coin<-tibble(face=c("tip","toss"), value=c(27,24))
kable(coin)
chisq.test(coin[,2]) # using only the numerical value
```

## Independency

```{r}

coin2<-tibble(face=rep(c("tip","toss"),2), biased=c("no","no","yes","yes"), value=c(27,24, 39,12)) |> 
  spread(biased, value)
kable(coin2)

chisq.test(coin2[,-1])$expected

chisq.test(x=c(27,24, 39,12), p = c(25.5,25.5,25.5,25.5), rescale.p=TRUE)

```

:::

## End of DA class{.center}














